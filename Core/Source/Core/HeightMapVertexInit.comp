#version 430 core

layout(local_size_x = 64) in;

layout(std430, binding = 0) buffer VertexBuffer{
	float positions[];
};


uniform int width;
uniform int height;

void main(){

	uint vertexIndex = gl_GlobalInvocationID.x;
	if(vertexIndex >= uint(width*height)) return;
	
	uint x = vertexIndex % uint(width);
	uint z = vertexIndex / uint(width);
	
	float xScale = 100.0f/width;
	float zScale = 100.0f/height;

	float xPos = (x - width/2.0f)*xScale;
	float yPos = 0;
	float zPos = (z - height/2.0f)*zScale;

	positions[vertexIndex*3] = xPos;
	positions[vertexIndex*3 + 1] = yPos;
	positions[vertexIndex*3 + 2] = zPos;
}