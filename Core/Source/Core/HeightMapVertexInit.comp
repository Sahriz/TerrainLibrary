#version 430 core

layout(local_size_x = 64) in;

layout(std430, binding = 0) buffer VertexBuffer{
	float positions[];
};


uniform int width;
uniform int height;
uniform ivec2 offset;

void main(){

	uint vertexIndex = gl_GlobalInvocationID.x;
	if(vertexIndex >= uint((width+1)*(height+1))) return;
	
	int x = int(vertexIndex % uint(width + 1));
	int z = int(vertexIndex / uint(width + 1));
	
	float xScale = 500.0f/width;
	float zScale = 500.0f/height;

	float xPos = x * xScale + offset.x * (width) * xScale;
	float yPos = 0;
	float zPos = z * zScale + offset.y * (height) * zScale;

	positions[vertexIndex*3] = xPos;
	positions[vertexIndex*3 + 1] = yPos;
	positions[vertexIndex*3 + 2] = zPos;
}