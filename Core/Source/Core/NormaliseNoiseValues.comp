#version 430 core

// Compute shader - one thread per cube
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(std430, binding = 0) buffer noiseBuffer{
	float noiseMap[];
};


uniform int width;
uniform int height;
uniform int depth;

void main(){
	
	uint xPos = gl_GlobalInvocationID.x;
	uint yPos = gl_GlobalInvocationID.y;
	uint zPos = gl_GlobalInvocationID.z;

	if(xPos >= uint(width) || yPos >= uint(height) || zPos >= uint(depth)) return;

	uint index = xPos + yPos * uint(width) + zPos * uint(width) * uint(height);
	
	float noiseValue = noiseMap[index];
	//noiseValue = (noiseValue + 1.0f) * 0.5f; // Normalize to [0, 1]

	noiseMap[index] = noiseValue;
}